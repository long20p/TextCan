{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "defaultValue": "dev",
            "type": "string"
        },
        "enableCosmosFreeTier": {
            "defaultValue": false,
            "type": "bool"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "kv_name": "[concat('kv-textcan-', parameters('environment'))]",
        "app_content_api_name": "[concat('app-contentapi-textcan-', parameters('environment'))]",
        "plan_func_key_service_name": "[concat('plan-keyservice-textcan-', parameters('environment'))]",
        "func_key_service_name": "[concat('func-keyservice-textcan-', parameters('environment'))]",
        "static_ui_name": "[concat('static-ui-textcan-', parameters('environment'))]",
        "plan_content_api_name": "[concat('plan-contentapi-textcan-', parameters('environment'))]",
        "cosmos_db_account_name": "[concat('cosmos-content-textcan-', parameters('environment'))]",
        "storage_account_key_service_func_name": "[concat('stkeysvcfunctextcan', parameters('environment'))]",
        "appi_func_key_service_name": "[concat('appi-keyservice-textcan-', parameters('environment'))]",
        "logan_appi_func_key_service_name": "[concat('logan-appi-keyservice-textcan-', parameters('environment'))]",
        "content-db-name": "TextCanContentDB",
        "content-container-name": "Content",
        "content-db-key-secret-name": "ContentDatabaseKey",
        "func-key-secret-name": "KeyServiceUrl",
        "func-keygen-name": "KeyGenerator",
        "cosmos-acc-resource-id": "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_db_account_name'))]",
        "db-key-secret-resource-id": "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kv_name'), variables('content-db-key-secret-name'))]",
        "func-key-secret-resource-id": "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kv_name'), variables('func-key-secret-name'))]"
    },
    "resources": [
        {
            /********************** Cosmos DB start **********************/

            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2021-07-01-preview",
            "name": "[variables('cosmos_db_account_name')]",
            "location": "[variables('location')]",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "enableFreeTier": "[parameters('enableCosmosFreeTier')]",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[variables('location')]",
                        "failoverPriority": 0
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 1440,
                        "backupRetentionIntervalInHours": 168,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "createMode": "Default"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2021-07-01-preview",
            "name": "[concat(variables('cosmos_db_account_name'), '/', variables('content-db-name'))]",
            "dependsOn": [
                "[variables('cosmos-acc-resource-id')]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('content-db-name')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2021-07-01-preview",
            "name": "[concat(variables('cosmos_db_account_name'), '/', variables('content-db-name'),'/', variables('content-container-name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmos_db_account_name'), variables('content-db-name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('content-container-name')]",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/Key"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
            "apiVersion": "2021-01-15",
            "name": "[concat(variables('cosmos_db_account_name'), '/', variables('content-db-name'), '/', variables('content-container-name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', variables('cosmos_db_account_name'), variables('content-db-name'), variables('content-container-name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400,
                    "autoscaleSettings": {
                        "maxThroughput": 4000
                    }
                }
            }
        },

        /********************** Cosmos DB end **********************/


        /********************** Key Service Func App Server Farm start **********************/
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('plan_func_key_service_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },

        /********************** Key Service Func App Server Farm end **********************/


        /********************** Key Service Func App start **********************/
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[variables('func_key_service_name')]",
            "location": "[variables('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('plan_func_key_service_name'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_key_service_func_name'))]",
                "[resourceId('Microsoft.Insights/components', variables('appi_func_key_service_name'))]"
            ],
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('plan_func_key_service_name'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('appi_func_key_service_name')), '2020-02-02').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage_account_key_service_func_name'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_key_service_func_name')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ],
                    "netFrameworkVersion": "v5.0"
                },
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },

        /********************** Key Service Func App end **********************/


        /********************** Key Service Func App Storage Account start **********************/
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-06-01",
            "name": "[variables('storage_account_key_service_func_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },

        /********************** Key Service Func App Storage Account end **********************/


        /********************** Key Service Func App App Insights start **********************/
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('appi_func_key_service_name')]",
            "location": "[variables('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "RetentionInDays": 90,
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logan_appi_func_key_service_name'))]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "name": "[variables('logan_appi_func_key_service_name')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2020-10-01",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 120,
                "features": {
                    "searchVersion": 1,
                    "legacy": 0,
                    "enableLogAccessUsingOnlyResourcePermissions": true
                }
            }
        },

        /********************** Key Service Func App App Insights end **********************/


        /********************** Key Vault start **********************/
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-06-01-preview",
            "name": "[variables('kv_name')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-06-01-preview",
            "name": "[concat(variables('kv_name'), '/', variables('content-db-key-secret-name'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "value": "[listKeys(variables('cosmos-acc-resource-id'), '2021-07-01-preview').primaryMasterKey]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-06-01-preview",
            "name": "[concat(variables('kv_name'), '/', variables('func-key-secret-name'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "value": "[concat('https://', variables('func_key_service_name'),'.azurewebsites.net/api/', variables('func-keygen-name'),'?code=', listkeys(concat(resourceId('Microsoft.Web/sites', variables('func_key_service_name')), '/host/default'),'2021-02-01').functionKeys.default)]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('kv_name'), '/add')]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('kv_name'))]",
                "[resourceId('Microsoft.Web/sites', variables('app_content_api_name'))]"
            ],
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('app_content_api_name')), '2019-08-01', 'full').identity.principalId]",
                        "permissions": {
                            "secrets": [ "Get", "List" ]
                        }
                    }
                ]
            }
        },

        /********************** Key Vault end **********************/


        /********************** Content API Server Farm start **********************/
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "name": "[variables('plan_content_api_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "reserved": true,
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },

        /********************** Content API Server Farm end **********************/


        /********************** Content API start **********************/
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[variables('app_content_api_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('plan_content_api_name'))]",
                "[variables('cosmos-acc-resource-id')]",
                "[variables('db-key-secret-resource-id')]",
                "[variables('func-key-secret-resource-id')]"
            ],
            "tags": {},
            "kind": "app,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('plan_content_api_name'))]",
                "reserved": true,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "Database__EndpointUrl",
                            "value": "[reference(variables('cosmos-acc-resource-id'), '2021-07-01-preview').documentEndpoint]"
                        },
                        {
                            "name": "Database__Key",
                            "value": "[reference(variables('db-key-secret-resource-id')).secretUri]"
                        },
                        {
                            "name": "KeyService__GetKeyUrl",
                            "value": "[reference(variables('func-key-secret-resource-id')).secretUri]"
                        }
                    ],
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOTNETCORE|5.0",
                    "alwaysOn": false
                },
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },

        /********************** Content API start **********************/


        /********************** UI Static Web App start **********************/
        {
            "type": "Microsoft.Web/staticSites",
            "apiVersion": "2021-02-01",
            "name": "[variables('static_ui_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Free",
                "tier": "Free"
            },
            "properties": {
            }
        }

        /********************** UI Static Web App end **********************/
    ]
}